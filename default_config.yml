# TODO:
#  database commands
#  Ldap
#  Relase commands
#  tslint phpstan phpunit
#  check if folder have projects files

# ==============  README  ==============  #

#           run commands in order
# commands: git chown sudo_chown

# sudo_chown: <- name od command (user_define)
#   command: "tutorial"
#   verbose: true|false
#   exit_on_error: true|false
#   description: ""
#   set_var: "define global variable=true"
#   grep: "grep in output"
#   message_grep: "if grep is successful show this message"
#   run_if_var_is_true: "if this variable is true run command tutorial"

# ==============  Configuration  ==============  #
last_update_date: 2019-02-25
autoupdate: true

# ==============  Command template  ==============  #

# commands:
#   order: default symfony angular

#   default:
#     name: default
#     description: Symfony
#     checked: true
#     commands: git chown sudo_chown composer_install

#   symfony:
#     name: Symfony
#     description: PHP aplications
#     checked: false
#     commands: git chown sudo_chown composer_install

#   angular:
#     name: Angular
#     description: Angular aplications
#     checked: false
#     commands: git chown sudo_chown npm_install

# ==============  Command definition  ==============  #

commands: git chown sudo_chown composer_install npm_install make_migrations

git:
  run_if_var_is_true:
  command: 'git pull --prune'
  description: 'Update project'
  verbose: true
  exit_on_error: false
  set_var:
  set_var_on_success:
  grep:
  message_grep:

chown:
  command: 'chown $USER * --recursive'
  verbose: false
  exit_on_error: false
  description: 'Fix premissions'
  set_var: SUDO_CHOWN
  grep:
  message_grep:
  run_if_var_is_true:

sudo_chown:
  command: 'sudo chown $USER * --recursive'
  verbose: true
  exit_on_error: false
  description: 'Fix premissions - sudo needed to set $USER as owner'
  set_var:
  grep:
  message_grep:
  run_if_var_is_true: SUDO_CHOWN

composer_install:
  command: 'composer install --no-interaction --profile'
  verbose: false
  exit_on_error: false
  description: 'Install PHP dependensis'
  set_var: COMPOSER_UPDATE
  grep: Run update
  message_grep: 'Composer update is recomended'
  run_if_var_is_true:

npm_install:
  command: 'npm install'
  verbose: false
  exit_on_error: false
  description: 'Install JS dependensis'
  set_var:
  grep:
  message_grep:
  run_if_var_is_true:

db_bazak:
  command: 'bd bazak'
  verbose: true
  exit_on_error: true
  description: 'Get fresh database from production'
  set_var: DB_ERROR
  grep:
  message_grep:
  run_if_var_is_true:

make_migrations:
  command: '../console.sh doctrine:migrations:migrate --no-interaction'
  verbose: false
  exit_on_error: false
  description: 'Make migrations'
  set_var: MIGRATIONS
  grep:
  message_grep:
  run_if_var_is_true:
