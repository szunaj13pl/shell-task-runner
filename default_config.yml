# ==============  README  ==============  #
#
#           run commands in order
# COMMANDS: git chown sudo_chown
#
# sudo_chown: <- name of command (user_define)
#   command: "tutorial"
#   verbose: true|false
#   exit_on_error: true|false
#   description: ""
#   set_var_grep: "define global variable=true"
#   set_var_success: "define global variable=true"
#   set_var_fail: "define global variable=true"
#   grep: "grep in output"
#   grep_message: "if grep is successful show this message"
#   run_if_var_is_true: "if this variable is true run command tutorial"
#
# ==============  Configuration  ==============  #

LAST_UPDATE_DATE: 2019-11-18
AUTOUPDATE: true

COMMANDS: git clear sudo_clear composer_install npm_install make_migrations

git:
  command: 'git pull --prune'
  description: 'Update project'
  verbose: true
  run_if_var_is_true:
  exit_on_error: false
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:

clear:
  command: 'rm --interactive=never --dir --recursive --force --verbose var/transpork vendor/ node_modules var/cache/*'
  verbose: false
  exit_on_error: false
  description: 'Remove files'
  set_var_grep:
  set_var_success:
  set_var_fail: SUDO_RM
  grep:
  grep_message:
  run_if_var_is_true:

sudo_clear:
  command: 'sudo rm --interactive=never --dir --recursive --force --verbose var/transpork vendor/ node_modules var/cache/*'
  verbose: false
  exit_on_error: false
  description: 'Remove files - sudo needed to set $USER as owner'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:
  run_if_var_is_true: SUDO_RM

chown:
  command: 'chown $USER * --recursive'
  verbose: false
  exit_on_error: false
  description: 'Fix premissions'
  set_var_grep:
  set_var_success:
  set_var_fail: SUDO_CHOWN
  grep:
  grep_message:
  run_if_var_is_true:

sudo_chown:
  command: 'sudo chown $USER * --recursive'
  verbose: true
  exit_on_error: false
  description: 'Fix premissions - sudo needed to set $USER as owner'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:
  run_if_var_is_true: SUDO_CHOWN

composer_install:
  command: 'composer install --no-interaction'
  verbose: true
  exit_on_error: true
  description: 'Install PHP dependensis'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep: Run update
  grep_message: 'Composer update is recomended'
  run_if_var_is_true:

npm_install:
  run_if_var_is_true:
  command: 'npm install'
  description: 'Node modules install'
  verbose: true
  exit_on_error: false
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:

make_migrations:
  command: '../console.sh doctrine:migrations:migrate --no-interaction'
  verbose: false
  exit_on_error: false
  description: 'Make migrations'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:
  run_if_var_is_true: COMPOSER_INSTALL_SUCCESS

db_bazak:
  command: 'db -g anonymous_bazak'
  verbose: true
  exit_on_error: true
  description: 'Get fresh database from production'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:
  run_if_var_is_true:

db_iapi:
  command: 'db -g api'
  verbose: true
  exit_on_error: true
  description: 'Get fresh database from production'
  set_var_grep:
  set_var_success:
  set_var_fail:
  grep:
  grep_message:
  run_if_var_is_true:
